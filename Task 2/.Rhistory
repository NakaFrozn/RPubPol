load("~/Desktop/R for Public Policy/Assignment/Task 2/PubPol477577Task2F23.Rdata")
??haven
df_bes_dta <- read_stata("./2010BESprepost.dta")
library(haven)
df_bes_dta <- read_stata("./2010BESprepost.dta")
str(df_bes_dta)
View(df_bes_dta)
View(df_bes_dta)
dim(df_bes_dta)
## .csv
df_csv <- read_csv("./TitanicSurvival.csv")
??read_csv
?haven
?read.csv
## .csv
df_csv <- readr::read_csv("./TitanicSurvival.csv")
str(df_csv)
df_bes_sav <- read_spss("./2010BESPreandPost.sav")
str(df_bes_sav)
??read_excel
df_xlsx <- readxl::read_excel("./oecdecondata1.xlsx",range="A5:K923",na="..")
str(df_xlsx)
dim(df_xlsx)
## Delim .txt
df_delim <- read.delim("./oecdecondata.txt")
str(df_delim)
?header
??header
?data.frame
str(df_bes_dta)
str(df_bes_sav)
View(df_csv)
View(df_bes_dta)
View(df_bes_sav)
head(df_bes_dta,5)
head(df_bes_sav,5)
dim(df_bes_dta)
dim(df_bes_csv)
dim(df_bes_sav)
type(df_bes_dta)
typeof(df_bes_dta)
typeof(df_bes_sav)
str(df_bes_dta)
str(df_bes_sav)
############################
# R for Public Policy
# Assignment - Task 2
# Zhonghan Xie
# U-M ID: 83866049
# Date: 09/26/2023
############################
# Load the dataset
load("~/Desktop/R for Public Policy/Assignment/Task 2/PubPol477577Task2F23.Rdata")
# Load the haven package
library(haven)
# Practicing Importing Data in Different File Types
## Stata .dta
df_bes_dta <- read_stata("./2010BESprepost.dta")
str(df_bes_dta)
## .csv
df_csv <- readr::read_csv("./TitanicSurvival.csv")
str(df_csv)
## SPSS .sav
df_bes_sav <- read_spss("./2010BESPreandPost.sav")
str(df_bes_sav)
## Excel .xlsx
### I have made some changes to the structure of the .xlsx file to make sure it
### can fit in the R.
### PS: I really hate the data structure of OECD Database, though its visualization
### is not bad.
### OECD database uses ".." to denote NA value.
df_xlsx <- readxl::read_excel("./oecdecondata1.xlsx",range="A5:M923",na="..")
str(df_xlsx)
rm(df_xlsx$...2)
df_xlsx[,-2]
## Excel .xlsx
### I have made some changes to the structure of the .xlsx file to make sure it
### can fit in the R.
### PS: I really hate the data structure of OECD Database, though its visualization
### is not bad.
### OECD database uses ".." to denote NA value.
df_xlsx <- readxl::read_excel("./oecdecondata1.xlsx",range="A5:M923",na="..")
View(df_xlsx)
df_xlsx[,-2]
df_xlsx <- df_xlsx[,-2]
View(df_xlsx)
## Excel .xlsx
### I have made some changes to the structure of the .xlsx file to make sure it
### can fit in the R.
### PS: I really hate the data structure of OECD Database, though its visualization
### is not bad.
### OECD database uses ".." to denote NA value.
df_xlsx <- readxl::read_excel("./oecdecondata1.xlsx",range="A5:M923",na="..")
?read_excel
?read.excel
??read.excel
?data.frame
?dataframe
??dataframe
View(df_xlsx)
### Next we need to refill the values of the merged cells
df_xlsx_2013 <- df_xlsx[df_xlsx$Time==2013]
### Next we need to refill the values of the merged cells
df_xlsx_2013 <- subset(df_xlsx,df_xlsx$Time==2013)
View(df_xlsx_2013)
### Next we need to refill the values of the merged cells
df_xlsx_2003 <- subset(df_xlsx,df_xlsx$Time==2003)
View(df_xlsx_2003)
df_xlsx_2003[1:40,1]
c(df_xlsx_2003[1:40,1],df_xlsx_2003[41:49,1])
list(c(df_xlsx_2003[1:40,1],df_xlsx_2003[41:49,2]))
?as.list
as.list(c(df_xlsx_2003[1:40,1],df_xlsx_2003[41:49,2]))
for(i in [42:49]){}
index<-[42:49]
index<-c(42:49)
for(i in index){}
for(i in index){}
for (i in c(42:49)){
df_xlsx_2013[i,1]=df_xlsx_2013[i,2]
}
for (i in c(42:49)){
df_xlsx_2003[i,1]=df_xlsx_2003[i,2]
}
for (i in c(41:49)){
df_xlsx_2003[i,1]=df_xlsx_2003[i,2]
}
country_tag <- df_xlsx_2003[1,]
year <- 2020-2003+1
country_tag_r = rep(country_tag,year)
country_tag <- df_xlsx_2003[1,]
country_tag <- df_xlsx_2003[1,1]
country_tag <- df_xlsx_2003[,1]
year <- 2020-2003+1
country_tag_r = rep(country_tag,year)
country_tag <- c(df_xlsx_2003[,1])
View(country_tag)
country_tag_r = rep(country_tag,year)
View(country_tag)
View(country_tag_r)
for (years in c(2003:2020)){
df_xlsx_years=subset(df_xlsx,df_xlsx$Time==years)
}
library(openxlsx)
install.packages("openxlsx")
library(openxlsx)
?read.xlsx
data <- read.xlsx("./oecdecondata1.xlsx",range="A5:M923",fillMergedCells = T, na.strings="..")
data <- read.xlsx("./oecdecondata1.xlsx",namedRegion="A5:M923",fillMergedCells = T, na.strings="..")
data <- read.xlsx("./oecdecondata1.xlsx",rows=c(1:923),cols=c(5:),fillMergedCells = T, na.strings="..")
data <- read.xlsx("./oecdecondata1.xlsx",rows=c(1:923),cols=c(1:13),fillMergedCells = T, na.strings="..")
View(data)
str(data)
data <- read.xlsx("./oecdecondata1.xlsx",rows=c(5:923),cols=c(1:13),fillMergedCells = T, na.strings="..")
View(data)
## Excel .xlsx
### PS: I really hate the data structure of OECD Database, though its visualization
### is not bad.
### OECD database uses ".." to denote NA value.
### Due to the merged cells in the .xlsx file, we use openxlsx::read.xlsx to deal with it.
install.packages("openxlsx") # To check if the package has been installed
install.packages("openxlsx")
?mutate
??mutate
?if
??if
?
??
1f
# Options: rows and columns specify the range of data we load into R
# fillMergedCells=T specify we need to fill the merged cells with the data.
# OECD database uses ".." to denote NA value. So we specify it in na.strings
df_xlsx <- df_xlsx[,-4] # delete the fourth column due to it is na
## Excel .xlsx
### PS: I really hate the data structure of OECD Database, though its visualization
### is not bad.
### Due to the merged cells in the .xlsx file, we use openxlsx::read.xlsx to deal with it.
# install.packages("openxlsx")  To check if the package has been installed
df_xlsx <- openxlsx::read.xlsx("./oecdecondata1.xlsx",rows=c(5:923),cols=c(1:13),fillMergedCells = T, na.strings="..")
# Options: rows and columns specify the range of data we load into R
# fillMergedCells=T specify we need to fill the merged cells with the data.
# OECD database uses ".." to denote NA value. So we specify it in na.strings
df_xlsx <- df_xlsx[,-4] # delete the fourth column due to it is na
df_xlsx_2003[1,]
df_xlsx_2003[,1]
print(df_xlsx_2003[,1])
print(c(df_xlsx_2003[,1])
)
oecd_countrylist <- c(df_xlsx_2003[1:36,1])
"Australia" in oecd_countrylist
oecd_countrylist[1]
oecd_countrylist <- unlist(df_xlsx_2003[1:36,1])
print(oecd_countrylist)
oecd_countrylist <- c(df_xlsx_2003[1:36,1])
print(oecd_countrylist)
oecd_countrylist[1][1]
oecd_countrylist[[1]]
oecd_countrylist[1][1][1]
oecd_countrylist[[1]][1]
"Australia" %in% oecd_countrylist[[1]]
length(df_xlsx)
nrow(df_xlsx)
c(1:nrow(df_xlsx))
print(oecd_countrylist)
oecd_countrylist <- c(df_xlsx[1:36,1]) # to get the OECD countries
print(oecd_countrylist)
df_xlsx_2003 <- subset(df_xlsx,df_xlsx$Time==2003)
oecd_countrylist <- c(df_xlsx_2003[1:36,1]) # to get the OECD countries
print(oecd_countrylist)
print(oecd_countrylist)
for (i in c(1:nrow(df_xlsx))){
if (df_xlsx[i,1] %in% oecd_countrylist[[1]]){
df_xlsx[i,1] <- "OECD Economies"
}
}
View(df_xlsx)
oecd_countrylist[[1]]
oecd_countrylist
for (i in c(1:nrow(df_xlsx))){
if (df_xlsx[i,1] %in% oecd_countrylist){
df_xlsx[i,1] <- "OECD Economies"
}
}
vec_colnames <- c("Category","Country","Time",
"Current account balance as a percentage of GDP",
"Real effective exchange rate, constant trade weights",
"Ratio of potential to actual real GDP of the total economy",
"Consumer price index",
"Consumer price index, harmonised",
"Gross domestic product, market prices, deflator",
"Labour productivity, total economy",
"Unemployment rate",
"Long-term interest rate on government bonds")
names(df_xlsx)
names(df_xlsx) <- vec_colnames
############################
# R for Public Policy
# Assignment - Task 2
# Zhonghan Xie
# U-M ID: 83866049
# Date: 09/26/2023
############################
# Load the dataset
load("~/Desktop/R for Public Policy/Assignment/Task 2/PubPol477577Task2F23.Rdata")
# Load the haven package
library(haven)
# Practicing Importing Data in Different File Types
## Stata .dta
df_bes_dta <- read_stata("./2010BESprepost.dta")
str(df_bes_dta)
## .csv
df_csv <- readr::read_csv("./TitanicSurvival.csv")
str(df_csv)
## SPSS .sav
df_bes_sav <- read_spss("./2010BESPreandPost.sav")
str(df_bes_sav)
## Excel .xlsx
### PS: I really hate the data structure of OECD Database, though its visualization
### is not bad.
### Due to the merged cells in the .xlsx file, we use openxlsx::read.xlsx to deal with it.
# install.packages("openxlsx")  To check if the package has been installed
df_xlsx <- openxlsx::read.xlsx("./oecdecondata1.xlsx",rows=c(5:923),cols=c(1:13),fillMergedCells = T, na.strings="..")
# Options: rows and columns specify the range of data we load into R
# fillMergedCells=T specify we need to fill the merged cells with the data.
# OECD database uses ".." to denote NA value. So we specify it in na.strings
df_xlsx <- df_xlsx[,-4] # delete the fourth column due to it is na
df_xlsx_2003 <- subset(df_xlsx,df_xlsx$Time==2003)
oecd_countrylist <- c(df_xlsx_2003[1:36,1]) # to get the OECD countries
print(oecd_countrylist)
for (i in c(1:nrow(df_xlsx))){
if (df_xlsx[i,1] %in% oecd_countrylist){
df_xlsx[i,1] <- "OECD Economies"
}
}. # The for loop above labels all the OECD economies
for (i in c(1:nrow(df_xlsx))){
if (df_xlsx[i,1] %in% oecd_countrylist){
df_xlsx[i,1] <- "OECD Economies"
}
} # The for loop above labels all the OECD economies
vec_colnames <- c("Category","Country","Time",
"Current account balance as a percentage of GDP",
"Real effective exchange rate, constant trade weights",
"Ratio of potential to actual real GDP of the total economy",
"Consumer price index",
"Consumer price index, harmonised",
"Gross domestic product, market prices, deflator",
"Labour productivity, total economy",
"Unemployment rate",
"Long-term interest rate on government bonds")
names(df_xlsx) <- vec_colnames # Rename the variables
str(df_xlsx) # Check again the structure of the data.frame
rm(ls())
ls()
rm(list(ls))
rm(ls)
rm(names(ls()))
rm(list=ls())
############################
# R for Public Policy
# Assignment - Task 2
# Zhonghan Xie
# U-M ID: 83866049
# Date: 09/26/2023
############################
# Load the dataset
load("~/Desktop/R for Public Policy/Assignment/Task 2/PubPol477577Task2F23.Rdata")
# Load the haven package
library(haven)
# Practicing Importing Data in Different File Types
## Stata .dta
df_bes_dta <- read_stata("./2010BESprepost.dta")
str(df_bes_dta)
## .csv
df_csv <- readr::read_csv("./TitanicSurvival.csv")
str(df_csv)
## SPSS .sav
df_bes_sav <- read_spss("./2010BESPreandPost.sav")
str(df_bes_sav)
## Excel .xlsx
### PS: I really hate the data structure of OECD Database, though its visualization
### is not bad.
### Due to the merged cells in the .xlsx file, we use openxlsx::read.xlsx to deal with it.
# install.packages("openxlsx")  To check if the package has been installed
df_xlsx <- openxlsx::read.xlsx("./oecdecondata1.xlsx",rows=c(5:923),cols=c(1:13),fillMergedCells = T, na.strings="..")
# Options: rows and columns specify the range of data we load into R
# fillMergedCells=T specify we need to fill the merged cells with the data.
# OECD database uses ".." to denote NA value. So we specify it in na.strings
df_xlsx <- df_xlsx[,-4] # delete the fourth column due to it is na
df_xlsx_2003 <- subset(df_xlsx,df_xlsx$Time==2003)
oecd_countrylist <- c(df_xlsx_2003[1:36,1]) # to get the OECD countries
print(oecd_countrylist)
for (i in c(1:nrow(df_xlsx))){
if (df_xlsx[i,1] %in% oecd_countrylist){
df_xlsx[i,1] <- "OECD Economies"
}
} # The for loop above labels all the OECD economies
vec_colnames <- c("Category","Country","Time",
"Current account balance as a percentage of GDP",
"Real effective exchange rate, constant trade weights",
"Ratio of potential to actual real GDP of the total economy",
"Consumer price index",
"Consumer price index, harmonised",
"Gross domestic product, market prices, deflator",
"Labour productivity, total economy",
"Unemployment rate",
"Long-term interest rate on government bonds")
names(df_xlsx) <- vec_colnames # Rename the variables
str(df_xlsx) # Check again the structure of the data.frame
## Delim .txt
df_delim <- read.delim("./oecdecondata.txt")
str(df_delim)
df_delim <- read.delim("./oecdecondata.txt")
str(df_delim)
# Checking imports
str(df_bes_dta)
str(df_bes_sav)
head(df_bes_dta)
head(df_bes_sav)
dim(df_bes_dta)
dim(df_bes_sav)
## The dimension of both tibbles are 3512*1301
